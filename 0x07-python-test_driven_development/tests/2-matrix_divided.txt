>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

==============================
the first group of cases
==============================

>>> matrix_divided(None, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided({"key": [1,2,3], "key_2": [2, 4, 5]}, 5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([1,2,3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([["Ahmed", "mo", 2], [3, 5, "Mo"]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


=======================================
the second group of cases
=======================================

>>> matrix_divided([[1, 2, 3], [1, 5, 5, 6]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size


=======================================
the third group of cases
=======================================

>>> matrix_divided([[1, 2, 3], [2, 4, 6]], "mo")
Traceback (most recent call last):
TypeError: div must be a number


>>> matrix_divided([[1, 3, 4], [6, 7, 8]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero


>>> matrix_divided([[2, 4, 5], [5, 6, 7]], 2)
[[1.0, 2.0, 2.5], [2.5, 3.0, 3.5]]


>>> matrix_divided([[2, 4, 5], [5, 6, 7]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

